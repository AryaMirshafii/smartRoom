# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: SmartRoom

custom:
  roomsTableName: 'java-products-${self:provider.stage}'
  usersTableName: 'java-products-${self:provider.stage}_1'

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["RoomsDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    ROOMS_TABLE_NAME: ${self:custom.roomsTableName}
    USERS_TABLE_NAME: ${self:custom.usersTableName}

package:
  artifact: 'target/${self:service}-${self:provider.stage}.jar'

functions:
  listRoom:
    handler: com.serverless.RoomFiles.ListRoomsHandler
    events:
      - http:
          path: /rooms
          method: get
  getRoom:
    handler: com.serverless.RoomFiles.GetRoomHandler
    events:
      - http:
          path: /rooms/{id}
          method: get
  createRoom:
    handler: com.serverless.RoomFiles.CreateRoomHandler
    events:
      - http:
          path: /rooms
          method: post
  deleteRoom:
    handler: com.serverless.RoomFiles.DeleteRoomHandler
    events:
      - http:
          path: /rooms/{id}
          method: delete
  updateRoom:
    handler: com.serverless.RoomFiles.PutRoomHandler
    events:
      - http:
          path: /rooms/{id}
          method: put







  #User stuff

  listUsers:
    handler: com.serverless.UserFiles.ListUsersHandler
    events:
    - http:
        path: /users
        method: get

  getUser:
    handler: com.serverless.UserFiles.GetUserHandler
    events:
    - http:
        path: /users/{id}
        method: get

  createUser:
    handler: com.serverless.UserFiles.CreateUserHandler
    events:
    - http:
        path: /users
        method: post

  deleteUser:
    handler: com.serverless.UserFiles.DeleteUserHandler
    events:
    - http:
        path: /users/{id}
        method: delete

  updateUser:
    handler: com.serverless.UserFiles.PutUserHandler
    events:
    - http:
        path: /users/{id}
        method: put

  loginUser:
    handler: com.serverless.UserFiles.UserLoginHandler
    events:
    - http:
        path: /users/login
        method: post





resources:
  Resources:
    RoomsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.roomsTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1


    UsersDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.usersTableName}
        AttributeDefinitions:
            - AttributeName: id
              AttributeType: S

        KeySchema:
        - AttributeName: id
          KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
